!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("qna-activity-log",[],n):"object"==typeof exports?exports["qna-activity-log"]=n():e["qna-activity-log"]=n()}("undefined"!=typeof self?self:this,(function(){return function(e){var n={};function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,r){"use strict";r.r(n),r.d(n,"initialize",(function(){return w})),r.d(n,"recordEvent",(function(){return O})),r.d(n,"sendSavedEvents",(function(){return m})),r.d(n,"clearCache",(function(){return S}));var t=function(e,n,r){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";return new Promise((function(o,i){var s=new XMLHttpRequest;s.open(e,n,!0),s.setRequestHeader("Content-type","application/json;charset=UTF-8"),t&&s.overrideMimeType&&s.overrideMimeType(t),s.addEventListener("load",(function(e){var n=e.target,r=JSON.parse(n.responseText),t=r.status||s.status;t>=200&&t<300?o(r.message||r):i(r.message||r)}));var a=JSON.stringify(r);s.send(a)}))},o=navigator.userAgent,i=navigator.appVersion,s=navigator.cookieEnabled,a=function(){return void 0===navigator.cookieEnabled&&!s&&(document.cookie="testcookie",-1!==document.cookie.indexOf("testcookie"))};function c(){var e=function(){var e="-",n="-",r=[{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}];for(var t in r){var s=r[t];if(s.r.test(o)){e=s.s;break}}switch(/Windows/.test(e)&&(n=/Windows (.*)/.exec(e)[1],e="Windows"),e){case"Mac OS X":n=/Mac OS X (10[\.\_\d]+)/.exec(o)[1];break;case"Android":n=/Android ([\.\_\d]+)/.exec(o)[1];break;case"iOS":n=(n=/OS (\d+)_(\d+)_?(\d+)?/.exec(i))[1]+"."+n[2]+"."+(0|n[3])}return{name:e,version:n}}(),n=function(){var e,n,r,t=parseInt(i,10),s=navigator.appName,a=""+parseFloat(navigator.appVersion);return-1!==(n=o.indexOf("Opera"))?(s="Opera",a=o.substring(n+6),-1!==(n=o.indexOf("Version"))&&(a=o.substring(n+8))):-1!==(n=o.indexOf("OPR"))?(s="Opera",a=o.substring(n+4)):-1!==(n=o.indexOf("Edge"))?(s="Microsoft Edge",a=o.substring(n+5)):-1!==(n=o.indexOf("MSIE"))?(s="Microsoft Internet Explorer",a=o.substring(n+5)):-1!==(n=o.indexOf("Chrome"))?(s="Chrome",a=o.substring(n+7)):-1!==(n=o.indexOf("Safari"))?(s="Safari",a=o.substring(n+7),-1!==(n=o.indexOf("Version"))&&(a=o.substring(n+8))):-1!==(n=o.indexOf("Firefox"))?(s="Firefox",a=o.substring(n+8)):-1!==o.indexOf("Trident/")?(s="Microsoft Internet Explorer",a=o.substring(o.indexOf("rv:")+3)):(e=o.lastIndexOf(" ")+1)<(n=o.lastIndexOf("/"))&&(s=o.substring(e,n),a=o.substring(n+1),s.toLowerCase()===s.toUpperCase()&&(s=navigator.appName)),-1!==(r=a.indexOf(""))&&(a=a.substring(0,r)),-1!==(r=a.indexOf(" "))&&(a=a.substring(0,r)),-1!==(r=a.indexOf(")"))&&(a=a.substring(0,r)),t=parseInt(""+a,10),isNaN(t)&&(a=""+parseFloat(i),t=parseInt(i,10)),{name:s||"",version:a||"",majorVersion:t||""}}(),r=function(){if(screen.width)return(screen.width?screen.width:"")+" x "+(screen.height?screen.height:"")}(),t=/Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(i);return{screen:r,browser:n.name,browserVersion:n.version,browserMajorVersion:n.majorVersion,mobile:t,os:e.name,osVersion:e.version,cookies:a}}var d="ASTRNT_ACTIVITY_LOG_ENV",u="ASTRNT_BASE_ACTIVITY_LOG_INFO",f="ASTRNT_LOG_ACTIVITY_INFOS",l=[d,u,f],v=function(){var e=localStorage.getItem(u);return JSON.parse(e)},g=function(){var e="";switch(localStorage.getItem(d)){case"beta":case"dev":e="log-beta";break;case"production":case"live":e="app"}var n="https://".concat(e,".astrnt.co");return"".concat(n,"/api/v2/activity/logs")},p=function(e){var n,r,t,o,i,s,a,d,u=c(),f=(new Date).getTimezoneOffset()/60*-1,l=(n=new Date,r=new Date(n),t=""+(r.getMonth()+1),o=""+r.getDate(),i=r.getFullYear(),s=r.getHours(),a=r.getMinutes(),d=r.getSeconds(),t.length<2&&(t="0"+t),o.length<2&&(o="0"+o),s=(s%=12)||12,a=a<10?"0"+a:a,"".concat([i,t,o].join("-")," ").concat(s,":").concat(a,":").concat(d)),g=navigator.userAgent,p="".concat(u.os," (").concat(u.osVersion,")"),w="".concat(u.browser,", Version ").concat(u.browserVersion," (").concat(u.browserMajorVersion,")"),O=v();return O.event=e.event||"",O.activity=e.activity||"",O.message=e.message||"",O.os=p,O.version=w,O.imei=g,O.log_time=l,O.time_zone=f,O};function w(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},o={interviewCode:n.interview_code||"",candidate_id:n.candidate_id||0,job_id:n.job_id||0,company_id:n.company_id||0,isProctoring:n.isProctoring||0};localStorage.setItem(d,e),localStorage.setItem(u,JSON.stringify(o)),window.addEventListener("error",(function(e){return r(e.error),!1})),window.addEventListener("unhandledrejection",(function(e){t(e.reason)}))}function O(e){switch(e.status){case"online":return function(e){if(!v().isProctoring)return new Promise((function(e,n){e("no action")}));var n=g(),r=p(e),o={activity:r.activity,interview_code:r.interviewCode};return t("POST",n,o)}(e);case"offline":return function(e){var n,r=localStorage.getItem(f);r?(n=JSON.parse(r),localStorage.removeItem(f)):n=[];var t=p(e);return n.push(t),localStorage.setItem(f,JSON.stringify(n)),Promise.resolve(t)}(e)}return Promise.resolve("No event to send")}function m(){var e=localStorage.getItem(f);if(!e)return Promise.resolve();var n=g(),r={logs:JSON.parse(e)};return new Promise((function(e,o){t("POST",n,r).then((function(n){localStorage.removeItem(f),e(n)})).catch((function(e){return o(e)}))}))}function S(){l.forEach((function(e){localStorage.removeItem(e)}))}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,